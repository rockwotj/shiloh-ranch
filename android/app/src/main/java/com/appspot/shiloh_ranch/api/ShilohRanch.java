/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2015-01-14 17:53:03 UTC)
 * on 2015-03-07 at 23:28:53 UTC 
 * Modify at your own risk.
 */

package com.appspot.shiloh_ranch.api;

import com.appspot.shiloh_ranch.api.model.CategoryCollection;
import com.appspot.shiloh_ranch.api.model.DeletionCollection;
import com.appspot.shiloh_ranch.api.model.EventCollection;
import com.appspot.shiloh_ranch.api.model.PostCollection;
import com.appspot.shiloh_ranch.api.model.SermonCollection;

/**
 * Service definition for Shilohranch (v1).
 *
 * <p>
 * Shiloh Ranch Mobile App API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link ShilohRanchRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class ShilohRanch extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.19.1 of the shilohranch library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://shiloh-ranch.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "shilohranch/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public ShilohRanch(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
                     com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  ShilohRanch(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Update collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Shilohranch shilohranch = new Shilohranch(...);}
   *   {@code Shilohranch.Update.List request = shilohranch.update().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Update update() {
    return new Update();
  }

  /**
   * The "update" collection of methods.
   */
  public class Update {

    /**
     * Create a request for the method "update.categories".
     *
     * This request holds the parameters needed by the shilohranch server.  After setting any optional
     * parameters, call the {@link Categories#execute()} method to invoke the remote operation.
     *
     * @param milliseconds
     * @return the request
     */
    public Categories categories(java.lang.Long milliseconds) throws java.io.IOException {
      Categories result = new Categories(milliseconds);
      initialize(result);
      return result;
    }

    public class Categories extends ShilohRanchRequest<com.appspot.shiloh_ranch.api.model.Update> {

      private static final String REST_PATH = "update/categories";

      /**
       * Create a request for the method "update.categories".
       *
       * This request holds the parameters needed by the the shilohranch server.  After setting any
       * optional parameters, call the {@link Categories#execute()} method to invoke the remote
       * operation. <p> {@link
       * Categories#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param milliseconds
       * @since 1.13
       */
      protected Categories(java.lang.Long milliseconds) {
        super(ShilohRanch.this, "GET", REST_PATH, null, com.appspot.shiloh_ranch.api.model.Update.class);
        this.milliseconds = com.google.api.client.util.Preconditions.checkNotNull(milliseconds, "Required parameter milliseconds must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Categories setAlt(java.lang.String alt) {
        return (Categories) super.setAlt(alt);
      }

      @Override
      public Categories setFields(java.lang.String fields) {
        return (Categories) super.setFields(fields);
      }

      @Override
      public Categories setKey(java.lang.String key) {
        return (Categories) super.setKey(key);
      }

      @Override
      public Categories setOauthToken(java.lang.String oauthToken) {
        return (Categories) super.setOauthToken(oauthToken);
      }

      @Override
      public Categories setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Categories) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Categories setQuotaUser(java.lang.String quotaUser) {
        return (Categories) super.setQuotaUser(quotaUser);
      }

      @Override
      public Categories setUserIp(java.lang.String userIp) {
        return (Categories) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Long milliseconds;

      /**

       */
      public java.lang.Long getMilliseconds() {
        return milliseconds;
      }

      public Categories setMilliseconds(java.lang.Long milliseconds) {
        this.milliseconds = milliseconds;
        return this;
      }

      @com.google.api.client.util.Key("time_zone_offset")
      private java.lang.Long timeZoneOffset;

      /**

       */
      public java.lang.Long getTimeZoneOffset() {
        return timeZoneOffset;
      }

      public Categories setTimeZoneOffset(java.lang.Long timeZoneOffset) {
        this.timeZoneOffset = timeZoneOffset;
        return this;
      }

      @Override
      public Categories set(String parameterName, Object value) {
        return (Categories) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "update.deletions".
     *
     * This request holds the parameters needed by the shilohranch server.  After setting any optional
     * parameters, call the {@link Deletions#execute()} method to invoke the remote operation.
     *
     * @param milliseconds
     * @return the request
     */
    public Deletions deletions(java.lang.Long milliseconds) throws java.io.IOException {
      Deletions result = new Deletions(milliseconds);
      initialize(result);
      return result;
    }

    public class Deletions extends ShilohRanchRequest<com.appspot.shiloh_ranch.api.model.Update> {

      private static final String REST_PATH = "update/deletions";

      /**
       * Create a request for the method "update.deletions".
       *
       * This request holds the parameters needed by the the shilohranch server.  After setting any
       * optional parameters, call the {@link Deletions#execute()} method to invoke the remote
       * operation. <p> {@link
       * Deletions#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param milliseconds
       * @since 1.13
       */
      protected Deletions(java.lang.Long milliseconds) {
        super(ShilohRanch.this, "GET", REST_PATH, null, com.appspot.shiloh_ranch.api.model.Update.class);
        this.milliseconds = com.google.api.client.util.Preconditions.checkNotNull(milliseconds, "Required parameter milliseconds must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Deletions setAlt(java.lang.String alt) {
        return (Deletions) super.setAlt(alt);
      }

      @Override
      public Deletions setFields(java.lang.String fields) {
        return (Deletions) super.setFields(fields);
      }

      @Override
      public Deletions setKey(java.lang.String key) {
        return (Deletions) super.setKey(key);
      }

      @Override
      public Deletions setOauthToken(java.lang.String oauthToken) {
        return (Deletions) super.setOauthToken(oauthToken);
      }

      @Override
      public Deletions setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Deletions) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Deletions setQuotaUser(java.lang.String quotaUser) {
        return (Deletions) super.setQuotaUser(quotaUser);
      }

      @Override
      public Deletions setUserIp(java.lang.String userIp) {
        return (Deletions) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Long milliseconds;

      /**

       */
      public java.lang.Long getMilliseconds() {
        return milliseconds;
      }

      public Deletions setMilliseconds(java.lang.Long milliseconds) {
        this.milliseconds = milliseconds;
        return this;
      }

      @com.google.api.client.util.Key("time_zone_offset")
      private java.lang.Long timeZoneOffset;

      /**

       */
      public java.lang.Long getTimeZoneOffset() {
        return timeZoneOffset;
      }

      public Deletions setTimeZoneOffset(java.lang.Long timeZoneOffset) {
        this.timeZoneOffset = timeZoneOffset;
        return this;
      }

      @Override
      public Deletions set(String parameterName, Object value) {
        return (Deletions) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "update.events".
     *
     * This request holds the parameters needed by the shilohranch server.  After setting any optional
     * parameters, call the {@link Events#execute()} method to invoke the remote operation.
     *
     * @param milliseconds
     * @return the request
     */
    public Events events(java.lang.Long milliseconds) throws java.io.IOException {
      Events result = new Events(milliseconds);
      initialize(result);
      return result;
    }

    public class Events extends ShilohRanchRequest<com.appspot.shiloh_ranch.api.model.Update> {

      private static final String REST_PATH = "update/events";

      /**
       * Create a request for the method "update.events".
       *
       * This request holds the parameters needed by the the shilohranch server.  After setting any
       * optional parameters, call the {@link Events#execute()} method to invoke the remote operation.
       * <p> {@link
       * Events#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param milliseconds
       * @since 1.13
       */
      protected Events(java.lang.Long milliseconds) {
        super(ShilohRanch.this, "GET", REST_PATH, null, com.appspot.shiloh_ranch.api.model.Update.class);
        this.milliseconds = com.google.api.client.util.Preconditions.checkNotNull(milliseconds, "Required parameter milliseconds must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Events setAlt(java.lang.String alt) {
        return (Events) super.setAlt(alt);
      }

      @Override
      public Events setFields(java.lang.String fields) {
        return (Events) super.setFields(fields);
      }

      @Override
      public Events setKey(java.lang.String key) {
        return (Events) super.setKey(key);
      }

      @Override
      public Events setOauthToken(java.lang.String oauthToken) {
        return (Events) super.setOauthToken(oauthToken);
      }

      @Override
      public Events setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Events) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Events setQuotaUser(java.lang.String quotaUser) {
        return (Events) super.setQuotaUser(quotaUser);
      }

      @Override
      public Events setUserIp(java.lang.String userIp) {
        return (Events) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Long milliseconds;

      /**

       */
      public java.lang.Long getMilliseconds() {
        return milliseconds;
      }

      public Events setMilliseconds(java.lang.Long milliseconds) {
        this.milliseconds = milliseconds;
        return this;
      }

      @com.google.api.client.util.Key("time_zone_offset")
      private java.lang.Long timeZoneOffset;

      /**

       */
      public java.lang.Long getTimeZoneOffset() {
        return timeZoneOffset;
      }

      public Events setTimeZoneOffset(java.lang.Long timeZoneOffset) {
        this.timeZoneOffset = timeZoneOffset;
        return this;
      }

      @Override
      public Events set(String parameterName, Object value) {
        return (Events) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "update.posts".
     *
     * This request holds the parameters needed by the shilohranch server.  After setting any optional
     * parameters, call the {@link Posts#execute()} method to invoke the remote operation.
     *
     * @param milliseconds
     * @return the request
     */
    public Posts posts(java.lang.Long milliseconds) throws java.io.IOException {
      Posts result = new Posts(milliseconds);
      initialize(result);
      return result;
    }

    public class Posts extends ShilohRanchRequest<com.appspot.shiloh_ranch.api.model.Update> {

      private static final String REST_PATH = "update/posts";

      /**
       * Create a request for the method "update.posts".
       *
       * This request holds the parameters needed by the the shilohranch server.  After setting any
       * optional parameters, call the {@link Posts#execute()} method to invoke the remote operation.
       * <p> {@link
       * Posts#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param milliseconds
       * @since 1.13
       */
      protected Posts(java.lang.Long milliseconds) {
        super(ShilohRanch.this, "GET", REST_PATH, null, com.appspot.shiloh_ranch.api.model.Update.class);
        this.milliseconds = com.google.api.client.util.Preconditions.checkNotNull(milliseconds, "Required parameter milliseconds must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Posts setAlt(java.lang.String alt) {
        return (Posts) super.setAlt(alt);
      }

      @Override
      public Posts setFields(java.lang.String fields) {
        return (Posts) super.setFields(fields);
      }

      @Override
      public Posts setKey(java.lang.String key) {
        return (Posts) super.setKey(key);
      }

      @Override
      public Posts setOauthToken(java.lang.String oauthToken) {
        return (Posts) super.setOauthToken(oauthToken);
      }

      @Override
      public Posts setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Posts) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Posts setQuotaUser(java.lang.String quotaUser) {
        return (Posts) super.setQuotaUser(quotaUser);
      }

      @Override
      public Posts setUserIp(java.lang.String userIp) {
        return (Posts) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Long milliseconds;

      /**

       */
      public java.lang.Long getMilliseconds() {
        return milliseconds;
      }

      public Posts setMilliseconds(java.lang.Long milliseconds) {
        this.milliseconds = milliseconds;
        return this;
      }

      @com.google.api.client.util.Key("time_zone_offset")
      private java.lang.Long timeZoneOffset;

      /**

       */
      public java.lang.Long getTimeZoneOffset() {
        return timeZoneOffset;
      }

      public Posts setTimeZoneOffset(java.lang.Long timeZoneOffset) {
        this.timeZoneOffset = timeZoneOffset;
        return this;
      }

      @Override
      public Posts set(String parameterName, Object value) {
        return (Posts) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "update.sermons".
     *
     * This request holds the parameters needed by the shilohranch server.  After setting any optional
     * parameters, call the {@link Sermons#execute()} method to invoke the remote operation.
     *
     * @param milliseconds
     * @return the request
     */
    public Sermons sermons(java.lang.Long milliseconds) throws java.io.IOException {
      Sermons result = new Sermons(milliseconds);
      initialize(result);
      return result;
    }

    public class Sermons extends ShilohRanchRequest<com.appspot.shiloh_ranch.api.model.Update> {

      private static final String REST_PATH = "update/sermons";

      /**
       * Create a request for the method "update.sermons".
       *
       * This request holds the parameters needed by the the shilohranch server.  After setting any
       * optional parameters, call the {@link Sermons#execute()} method to invoke the remote operation.
       * <p> {@link
       * Sermons#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param milliseconds
       * @since 1.13
       */
      protected Sermons(java.lang.Long milliseconds) {
        super(ShilohRanch.this, "GET", REST_PATH, null, com.appspot.shiloh_ranch.api.model.Update.class);
        this.milliseconds = com.google.api.client.util.Preconditions.checkNotNull(milliseconds, "Required parameter milliseconds must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Sermons setAlt(java.lang.String alt) {
        return (Sermons) super.setAlt(alt);
      }

      @Override
      public Sermons setFields(java.lang.String fields) {
        return (Sermons) super.setFields(fields);
      }

      @Override
      public Sermons setKey(java.lang.String key) {
        return (Sermons) super.setKey(key);
      }

      @Override
      public Sermons setOauthToken(java.lang.String oauthToken) {
        return (Sermons) super.setOauthToken(oauthToken);
      }

      @Override
      public Sermons setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Sermons) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Sermons setQuotaUser(java.lang.String quotaUser) {
        return (Sermons) super.setQuotaUser(quotaUser);
      }

      @Override
      public Sermons setUserIp(java.lang.String userIp) {
        return (Sermons) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Long milliseconds;

      /**

       */
      public java.lang.Long getMilliseconds() {
        return milliseconds;
      }

      public Sermons setMilliseconds(java.lang.Long milliseconds) {
        this.milliseconds = milliseconds;
        return this;
      }

      @com.google.api.client.util.Key("time_zone_offset")
      private java.lang.Long timeZoneOffset;

      /**

       */
      public java.lang.Long getTimeZoneOffset() {
        return timeZoneOffset;
      }

      public Sermons setTimeZoneOffset(java.lang.Long timeZoneOffset) {
        this.timeZoneOffset = timeZoneOffset;
        return this;
      }

      @Override
      public Sermons set(String parameterName, Object value) {
        return (Sermons) super.set(parameterName, value);
      }
    }

  }

  /**
   * Create a request for the method "categories".
   *
   * This request holds the parameters needed by the shilohranch server.  After setting any optional
   * parameters, call the {@link Categories#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public Categories categories() throws java.io.IOException {
    Categories result = new Categories();
    initialize(result);
    return result;
  }

  public class Categories extends ShilohRanchRequest<CategoryCollection> {

    private static final String REST_PATH = "categories";

    /**
     * Create a request for the method "categories".
     *
     * This request holds the parameters needed by the the shilohranch server.  After setting any
     * optional parameters, call the {@link Categories#execute()} method to invoke the remote
     * operation. <p> {@link
     * Categories#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected Categories() {
      super(ShilohRanch.this, "GET", REST_PATH, null, com.appspot.shiloh_ranch.api.model.CategoryCollection.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public Categories setAlt(java.lang.String alt) {
      return (Categories) super.setAlt(alt);
    }

    @Override
    public Categories setFields(java.lang.String fields) {
      return (Categories) super.setFields(fields);
    }

    @Override
    public Categories setKey(java.lang.String key) {
      return (Categories) super.setKey(key);
    }

    @Override
    public Categories setOauthToken(java.lang.String oauthToken) {
      return (Categories) super.setOauthToken(oauthToken);
    }

    @Override
    public Categories setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Categories) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Categories setQuotaUser(java.lang.String quotaUser) {
      return (Categories) super.setQuotaUser(quotaUser);
    }

    @Override
    public Categories setUserIp(java.lang.String userIp) {
      return (Categories) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String lastSync;

    /**

     */
    public java.lang.String getLastSync() {
      return lastSync;
    }

    public Categories setLastSync(java.lang.String lastSync) {
      this.lastSync = lastSync;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long limit;

    /**

     */
    public java.lang.Long getLimit() {
      return limit;
    }

    public Categories setLimit(java.lang.Long limit) {
      this.limit = limit;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String pageToken;

    /**

     */
    public java.lang.String getPageToken() {
      return pageToken;
    }

    public Categories setPageToken(java.lang.String pageToken) {
      this.pageToken = pageToken;
      return this;
    }

    @Override
    public Categories set(String parameterName, Object value) {
      return (Categories) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "deletions".
   *
   * This request holds the parameters needed by the shilohranch server.  After setting any optional
   * parameters, call the {@link Deletions#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public Deletions deletions() throws java.io.IOException {
    Deletions result = new Deletions();
    initialize(result);
    return result;
  }

  public class Deletions extends ShilohRanchRequest<DeletionCollection> {

    private static final String REST_PATH = "deletions";

    /**
     * Create a request for the method "deletions".
     *
     * This request holds the parameters needed by the the shilohranch server.  After setting any
     * optional parameters, call the {@link Deletions#execute()} method to invoke the remote
     * operation. <p> {@link
     * Deletions#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected Deletions() {
      super(ShilohRanch.this, "GET", REST_PATH, null, com.appspot.shiloh_ranch.api.model.DeletionCollection.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public Deletions setAlt(java.lang.String alt) {
      return (Deletions) super.setAlt(alt);
    }

    @Override
    public Deletions setFields(java.lang.String fields) {
      return (Deletions) super.setFields(fields);
    }

    @Override
    public Deletions setKey(java.lang.String key) {
      return (Deletions) super.setKey(key);
    }

    @Override
    public Deletions setOauthToken(java.lang.String oauthToken) {
      return (Deletions) super.setOauthToken(oauthToken);
    }

    @Override
    public Deletions setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Deletions) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Deletions setQuotaUser(java.lang.String quotaUser) {
      return (Deletions) super.setQuotaUser(quotaUser);
    }

    @Override
    public Deletions setUserIp(java.lang.String userIp) {
      return (Deletions) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String lastSync;

    /**

     */
    public java.lang.String getLastSync() {
      return lastSync;
    }

    public Deletions setLastSync(java.lang.String lastSync) {
      this.lastSync = lastSync;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long limit;

    /**

     */
    public java.lang.Long getLimit() {
      return limit;
    }

    public Deletions setLimit(java.lang.Long limit) {
      this.limit = limit;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String pageToken;

    /**

     */
    public java.lang.String getPageToken() {
      return pageToken;
    }

    public Deletions setPageToken(java.lang.String pageToken) {
      this.pageToken = pageToken;
      return this;
    }

    @Override
    public Deletions set(String parameterName, Object value) {
      return (Deletions) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "events".
   *
   * This request holds the parameters needed by the shilohranch server.  After setting any optional
   * parameters, call the {@link Events#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public Events events() throws java.io.IOException {
    Events result = new Events();
    initialize(result);
    return result;
  }

  public class Events extends ShilohRanchRequest<EventCollection> {

    private static final String REST_PATH = "events";

    /**
     * Create a request for the method "events".
     *
     * This request holds the parameters needed by the the shilohranch server.  After setting any
     * optional parameters, call the {@link Events#execute()} method to invoke the remote operation.
     * <p> {@link
     * Events#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected Events() {
      super(ShilohRanch.this, "GET", REST_PATH, null, com.appspot.shiloh_ranch.api.model.EventCollection.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public Events setAlt(java.lang.String alt) {
      return (Events) super.setAlt(alt);
    }

    @Override
    public Events setFields(java.lang.String fields) {
      return (Events) super.setFields(fields);
    }

    @Override
    public Events setKey(java.lang.String key) {
      return (Events) super.setKey(key);
    }

    @Override
    public Events setOauthToken(java.lang.String oauthToken) {
      return (Events) super.setOauthToken(oauthToken);
    }

    @Override
    public Events setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Events) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Events setQuotaUser(java.lang.String quotaUser) {
      return (Events) super.setQuotaUser(quotaUser);
    }

    @Override
    public Events setUserIp(java.lang.String userIp) {
      return (Events) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String lastSync;

    /**

     */
    public java.lang.String getLastSync() {
      return lastSync;
    }

    public Events setLastSync(java.lang.String lastSync) {
      this.lastSync = lastSync;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long limit;

    /**

     */
    public java.lang.Long getLimit() {
      return limit;
    }

    public Events setLimit(java.lang.Long limit) {
      this.limit = limit;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String pageToken;

    /**

     */
    public java.lang.String getPageToken() {
      return pageToken;
    }

    public Events setPageToken(java.lang.String pageToken) {
      this.pageToken = pageToken;
      return this;
    }

    @Override
    public Events set(String parameterName, Object value) {
      return (Events) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "posts".
   *
   * This request holds the parameters needed by the shilohranch server.  After setting any optional
   * parameters, call the {@link Posts#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public Posts posts() throws java.io.IOException {
    Posts result = new Posts();
    initialize(result);
    return result;
  }

  public class Posts extends ShilohRanchRequest<PostCollection> {

    private static final String REST_PATH = "posts";

    /**
     * Create a request for the method "posts".
     *
     * This request holds the parameters needed by the the shilohranch server.  After setting any
     * optional parameters, call the {@link Posts#execute()} method to invoke the remote operation.
     * <p> {@link
     * Posts#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected Posts() {
      super(ShilohRanch.this, "GET", REST_PATH, null, com.appspot.shiloh_ranch.api.model.PostCollection.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public Posts setAlt(java.lang.String alt) {
      return (Posts) super.setAlt(alt);
    }

    @Override
    public Posts setFields(java.lang.String fields) {
      return (Posts) super.setFields(fields);
    }

    @Override
    public Posts setKey(java.lang.String key) {
      return (Posts) super.setKey(key);
    }

    @Override
    public Posts setOauthToken(java.lang.String oauthToken) {
      return (Posts) super.setOauthToken(oauthToken);
    }

    @Override
    public Posts setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Posts) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Posts setQuotaUser(java.lang.String quotaUser) {
      return (Posts) super.setQuotaUser(quotaUser);
    }

    @Override
    public Posts setUserIp(java.lang.String userIp) {
      return (Posts) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String lastSync;

    /**

     */
    public java.lang.String getLastSync() {
      return lastSync;
    }

    public Posts setLastSync(java.lang.String lastSync) {
      this.lastSync = lastSync;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long limit;

    /**

     */
    public java.lang.Long getLimit() {
      return limit;
    }

    public Posts setLimit(java.lang.Long limit) {
      this.limit = limit;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String pageToken;

    /**

     */
    public java.lang.String getPageToken() {
      return pageToken;
    }

    public Posts setPageToken(java.lang.String pageToken) {
      this.pageToken = pageToken;
      return this;
    }

    @Override
    public Posts set(String parameterName, Object value) {
      return (Posts) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "sermons".
   *
   * This request holds the parameters needed by the shilohranch server.  After setting any optional
   * parameters, call the {@link Sermons#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public Sermons sermons() throws java.io.IOException {
    Sermons result = new Sermons();
    initialize(result);
    return result;
  }

  public class Sermons extends ShilohRanchRequest<SermonCollection> {

    private static final String REST_PATH = "sermons";

    /**
     * Create a request for the method "sermons".
     *
     * This request holds the parameters needed by the the shilohranch server.  After setting any
     * optional parameters, call the {@link Sermons#execute()} method to invoke the remote operation.
     * <p> {@link
     * Sermons#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected Sermons() {
      super(ShilohRanch.this, "GET", REST_PATH, null, com.appspot.shiloh_ranch.api.model.SermonCollection.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public Sermons setAlt(java.lang.String alt) {
      return (Sermons) super.setAlt(alt);
    }

    @Override
    public Sermons setFields(java.lang.String fields) {
      return (Sermons) super.setFields(fields);
    }

    @Override
    public Sermons setKey(java.lang.String key) {
      return (Sermons) super.setKey(key);
    }

    @Override
    public Sermons setOauthToken(java.lang.String oauthToken) {
      return (Sermons) super.setOauthToken(oauthToken);
    }

    @Override
    public Sermons setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Sermons) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Sermons setQuotaUser(java.lang.String quotaUser) {
      return (Sermons) super.setQuotaUser(quotaUser);
    }

    @Override
    public Sermons setUserIp(java.lang.String userIp) {
      return (Sermons) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String lastSync;

    /**

     */
    public java.lang.String getLastSync() {
      return lastSync;
    }

    public Sermons setLastSync(java.lang.String lastSync) {
      this.lastSync = lastSync;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long limit;

    /**

     */
    public java.lang.Long getLimit() {
      return limit;
    }

    public Sermons setLimit(java.lang.Long limit) {
      this.limit = limit;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String pageToken;

    /**

     */
    public java.lang.String getPageToken() {
      return pageToken;
    }

    public Sermons setPageToken(java.lang.String pageToken) {
      this.pageToken = pageToken;
      return this;
    }

    @Override
    public Sermons set(String parameterName, Object value) {
      return (Sermons) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link ShilohRanch}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link ShilohRanch}. */
    @Override
    public ShilohRanch build() {
      return new ShilohRanch(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link ShilohRanchRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setShilohranchRequestInitializer(
        ShilohRanchRequestInitializer shilohranchRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(shilohranchRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
